#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Java command to use when running nifi-registry
java=java

# Username to use when running nifi-registry. This value will be ignored on Windows.
run.as=

# Configure the working directory for launching the NiFi Registry process
# If not specified, the working directory will fall back to using the NIFI_REGISTRY_HOME env variable
# If the environment variable is not specified, the working directory will fall back to the parent of this file's parent
working.dir=

# Configure where nifi-registry's lib and conf directories live
lib.dir=./lib
conf.dir=./conf
docs.dir=./docs

# How long to wait after telling nifi-registry to shutdown before explicitly killing the Process
graceful.shutdown.seconds=20

# Disable JSR 199 so that we can use JSP's without running a JDK
java.arg.1=-Dorg.apache.jasper.compiler.disablejsr199=true

# JVM memory settings
java.arg.2=-Xms512m
java.arg.3=-Xmx512m

# Enable Remote Debugging
#java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000

java.arg.4=-Djava.net.preferIPv4Stack=true

# allowRestrictedHeaders is required for Cluster/Node communications to work properly
java.arg.5=-Dsun.net.http.allowRestrictedHeaders=true
java.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol

# Master key in hexadecimal format for encrypted sensitive configuration values
nifi.registry.bootstrap.sensitive.key=

# Sensitive Property Provider configuration

# HashiCorp Vault Sensitive Property Providers
nifi.registry.bootstrap.protection.hashicorp.vault.conf=./conf/bootstrap-hashicorp-vault.conf

# Note: the following mapping properties only apply if a Sensitive Property Provider that uses property contexts
# is configured.  Otherwise, these values are ignored.
#
# If no nifi.bootstrap.protection.context.mapping.* properties are provided, the context for protected
# properties uses a 'default' context, as in "default/Manager Password".  Properties in nifi.properties are always
# assigned this context, but there is a possibility of naming conflicts among the .xml configuration files.
#
# To create separate contexts for XML properties, you may provide context mappings in the format:
# nifi.bootstrap.protection.context.mapping.<contextName>=<identifier matching regex>
# With the following configuration, for example, any XML property named "Manager Password" located inside
# an XML block whose <identifier> starts with "ldap-" will be mapped to the context named "ldap/Manager Password",
# regardless of whether it resides in authorizers.xml or login-identity-providers.xml.
nifi.registry.bootstrap.protection.context.mapping.ldap=ldap-.*